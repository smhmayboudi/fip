syntax = "proto3";

package fip.rt;

service Rt {
    rpc Delete (RtDeleteReq) returns (RtRes);
    rpc DeleteByClaimsSub (RtDeleteByClaimsSubReq) returns (RtRes);
    rpc Find (RtFindReq) returns (stream RtRes);
    rpc FindOne (RtFindOneReq) returns (RtRes);
    rpc FindOneByClaimsSub (RtFindOneByClaimsSubReq) returns (RtRes);
    rpc Save (RtSaveReq) returns (RtRes);
    rpc Update (RtUpdateReq) returns (RtRes);
    rpc Validate (RtValidateReq) returns (RtRes);
    rpc ValidateByClaimsSub (RtValidateByClaimsSubReq) returns (RtRes);
}

message RtDeleteReq {
    string claims_jti = 1;
}

message RtDeleteByClaimsSubReq {
    string claims_sub = 1;
}

message RtFindReq {
}

message RtFindOneReq {
    string claims_jti = 1;
}

message RtFindOneByClaimsSubReq {
    string claims_sub = 1;
}

message RtSaveReq {
    string claims_aud = 1;
    int64 claims_exp = 2;
    int64 claims_iat = 3;
    string claims_iss = 4;
    string claims_jti = 5;
    int64 claims_nbf = 6;
    string claims_sub = 7;
    bool token_blocked = 8;
    string token_blocked_description = 9;
}

message RtUpdateReq {
    string claims_aud = 1;
    int64 claims_exp = 2;
    int64 claims_iat = 3;
    string claims_iss = 4;
    string claims_jti = 5;
    int64 claims_nbf = 6;
    string claims_sub = 7;
    bool token_blocked = 8;
    string token_blocked_description = 9;
}

message RtValidateReq {
    string claims_jti = 1;
}

message RtValidateByClaimsSubReq {
    string claims_sub = 1;
}

message RtRes {
    string claims_aud = 1;
    int64 claims_exp = 2;
    int64 claims_iat = 3;
    string claims_iss = 4;
    string claims_jti = 5;
    int64 claims_nbf = 6;
    string claims_sub = 7;
    bool token_blocked = 8;
    string token_blocked_description = 9;
}
