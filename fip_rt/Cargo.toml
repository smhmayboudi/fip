# cargo-features

# [[bench]]

[[bin]]
# bench = true          # Is benchmarked by default.
# crate-type = ["bin"]  # The crate types to generate.
# doc = true            # Is documented by default.
# doctest = true        # Documentation examples are tested by default.
# edition = "2021"      # The edition of the target.
# harness = true        # Use libtest harness.
name = "fip_rt"         # The name of the target.
path = "src/main.rs"    # The source file of the target.
# proc-macro = false    # Set to `true` for a proc-macro library.
required-features = []  # Features required to build this target (N/A for lib).
# test = true           # Is tested by default.

# [[example]]

# [[test]]

# [badges]

[build-dependencies]
tonic-build = { default-features = false, version = "0.6.2" }

[dependencies]
anyhow = { default-features = false, features = ["std"], version = "1.0.51" }
chrono = { default-features = false, version = "0.4.19" }
dotenv = { default-features = false, version = "0.15.0" }
envy = { default-features = false, version = "0.4.2" }
fip_common = { default-features = false, path = "../fip_common", version = "0.1.0" }
futures = { default-features = false, version = "0.3.19" }
opentelemetry = { default-features = false, features = ["rt-tokio"], version = "0.16.0" }
# opentelemetry-jaeger = { default-features = false, features = ["tokio"], version = "0.15.0" }
opentelemetry-zipkin = { default-features = false, features = ["reqwest-client"], version = "0.14.0" }
prost = { default-features = false, version = "0.9.0" }
# rdkafka = { default-features = false, features = ["cmake-build"], version = "0.26.0" }
serde = { default-features = false, features = ["derive"], version = "1.0.132" }
sqlx = { default-features = false, features = ["macros", "runtime-tokio-rustls", "sqlite"], version = "0.5.9" }
tokio = { default-features = false, features = ["macros", "rt-multi-thread", "time"], version = "1.15.0" }
tokio-stream = { default-features = false, version = "0.1.8" }
tonic = { default-features = false, features = ["transport"], version = "0.6.2" }
tonic-health = { default-features = false, features = ["transport"], version = "0.5.0" }
tracing = { default-features = false, version = "0.1.29" }
tracing-appender = { default-features = false, version = "0.2.0" }
tracing-bunyan-formatter = { default-features = false, version = "0.3.1" }
tracing-error = { default-features = false, version = "0.2.0" }
tracing-opentelemetry = { default-features = false, features = ["tracing-log"], version = "0.16.0" }
tracing-subscriber = { default-features = false, features = ["env-filter", "fmt"], version = "0.3.4" }
uuid = { default-features = false, features = ["v4"], version = "0.8.2" }

# [dev-dependencies]

# [features]

# [lib]

[package]
authors = ["Hossein Mayboudi <smhmayboudi@gmail.com>"]
# autobins
# autobenches
# autoexamples
# autotests
# build
categories = ["network-programming"]
# default-run
description = "fip_rt"
documentation = "https://github.com/smhmayboudi/fip/fip_rt"
edition = "2021"
# exclude
homepage = "https://github.com/smhmayboudi/fip"
include = [
    "build.rs",
    "proto/*",
    "src/**/*",
]
keywords = [
    "fip",
    "rt",
]
license = "MIT"
# license-file
# links
# metadata
name = "fip_rt"
publish = false
readme = "fip_rt/README.md"
# resolver
rust-version = "1.57.0"
repository = "https://github.com/smhmayboudi/fip"
version = "0.1.0"
# workspace

# [patch]

# [profile.<name>]

# [replace]

# [target.<cfg>]

# [target.<triple>]

# [target.<triple>.<links>]

# [workspace]
