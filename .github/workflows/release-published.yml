env:
  CARGO_TERM_COLOR: always
  PACKAGE: fip_api
jobs:
  build-and-push-docker-image:
    name: Build and Publish Docker Image
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      -
        name: Check Out
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      -
        name: Extract Metadata (Tags, Labels) for Docker
        id: metadata
        uses: docker/metadata-action@548e2346a9987b56d8a4104fe776321ff8e23440
        with:
          labels: |
            org.opencontainers.image.authors=${{ github.actor }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}/tree/${{ github.sha }}/${{ env.PACKAGE }}
            org.opencontainers.image.title=${{ env.PACKAGE}}
            org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}/main/${{ env.PACKAGE }}
            org.opencontainers.image.vendor=${{ github.actor }}
# org.opencontainers.image.base.digest=""
# org.opencontainers.image.base.name=""
# org.opencontainers.image.description=""
# org.opencontainers.image.documentation=""
# org.opencontainers.image.ref.name=""
          images: ghcr.io/${{ github.repository }}/${{ env.PACKAGE}}
          tags: type=semver,pattern={{version}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480
        with:
          platforms: arm,arm64
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25
        with:
          config: ./.github/buildkitd.toml
      -
        name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          password: ${{ secrets.PACKAGE_REGISTRY }}
          registry: ghcr.io
          username: ${{ github.actor }}
      -
        name: Build and Push Docker Image
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229
        with:
          build-args: |
            VERSION=${{ fromJSON(steps.metadata.outputs.json).labels['org.opencontainers.image.version'] }}
          cache-from: type=registry,ref=${{ github.repository }}/${{ env.PACKAGE}}:latest
          cache-to: type=inline
          context: fip_api
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm/v7
            linux/arm64
          push: true
          secrets: GIT_AUTH_TOKEN=${{ secrets.PACKAGE_REGISTRY }}
          tags: ${{ steps.metadata.outputs.tags }}
name: Release Published
on:
  release:
    types:
      - published
